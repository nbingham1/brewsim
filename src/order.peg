order = (_ (have | need | variable | select | constraint | rule))+ _ ~"\0";
have = ~"have" _ expression _ instance (_ ~"," _ expression _ instance)* _ ~";";
need = ~"need" _ expression _ ~";";
variable = ~"let" _ instance _ ~"=" _ expression _ ~";";
select = ("min" | "max") _ expression _ ~";";
constraint = ~"keep" _ expression _ ~";";
rule = expression _ ~"->" _ assigns _ (~";" _ assigns _)? ~":" _ text;

assigns = assign _ (~"," _ assign _)*;
assign = instance _ ("=" | "+=" | "-=") _ expression; 

expression = expression0 (_ ("and" | "or") _ expression0)*;
expression0 = expression1 (_ ("<" | ">" | "<=" | ">=" | "==" | "!=") _ expression1)?;
expression1 = expression2 (_ ("\+" | "-") _ expression2)*;
expression2 = expression3 (_ ("\*" | "/" | "%") _ expression3)*;
expression3 = ("not" _)? expression4;
expression4 = ("-" _)? expression5;
expression5 = ~"\(" _ expression _ ~"\)" | integer | function | instance;
function = "[a-zA-Z_][a-zA-Z0-9_]*" _ ~"\(" _ expression _ (~"," _ expression _ )* ~"\)";

integer = "([0-9]+|inf)";
text = "\"([^\"\\]|\\.)*\"";
instance = "[_a-zA-Z][_a-zA-Z0-9]*";
_ ~= "[ \t\n\r]*(#[^\n\r]*[ \t\n\r]*)*";
